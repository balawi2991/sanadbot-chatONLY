import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function seedTestUser() {
  try {
    console.log('๐ฑ ุฅูุดุงุก ูุณุชุฎุฏู ุชุฌุฑูุจู...')
    
    // ุฅูุดุงุก ูุณุชุฎุฏู ุชุฌุฑูุจู
    const hashedPassword = await bcrypt.hash('test123', 10)
    
    const testUser = await prisma.user.upsert({
      where: { email: 'test@example.com' },
      update: {},
      create: {
        name: 'ูุณุชุฎุฏู ุชุฌุฑูุจู',
        email: 'test@example.com',
        password: hashedPassword
      }
    })
    
    console.log('โ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู ุงูุชุฌุฑูุจู:', testUser.email)
    
    // ุฅูุดุงุก ุจูุช ูููุณุชุฎุฏู ุงูุชุฌุฑูุจู
    const testBot = await prisma.bot.upsert({
      where: { userId: testUser.id },
      update: {},
      create: {
        userId: testUser.id,
        name: 'ูุณุงุนุฏ ุงูุดุฑูุฉ ุงูุฐูู',
        color: '#10B981',
        placeholder: 'ุงุณุฃู ุนู ุฎุฏูุงุช ุงูุดุฑูุฉ...',
        welcome: 'ูุฑุญุจุงู! ุฃูุง ูุณุงุนุฏ ุงูุดุฑูุฉ ุงูุฐูู. ููู ูููููู ูุณุงุนุฏุชู ุงููููุ',
        personality: 'ุฃูุช ูุณุงุนุฏ ุฐูู ููููุฏ ูุดุฑูุฉ ุชูููุฉ. ุชุชููุฒ ุจุงูููููุฉ ูุงููุฏ ูู ุงูุชุนุงูู ูุน ุงูุนููุงุก. ุชูุฏู ูุนูููุงุช ุฏูููุฉ ููููุฏุฉ ุนู ุฎุฏูุงุช ุงูุดุฑูุฉ.',
        isActive: true
      }
    })
    
    console.log('โ ุชู ุฅูุดุงุก ุงูุจูุช:', testBot.name)
    
    // ุฅุถุงูุฉ ุฃุณุฆูุฉ ูุฃุฌูุจุฉ ููุจูุช ุงูุชุฌุฑูุจู
    const testQAs = [
      {
        question: 'ูุง ูู ุฎุฏูุงุช ุงูุดุฑูุฉุ',
        answer: 'ูุญู ููุฏู ุฎุฏูุงุช ุชุทููุฑ ุงูููุงูุน ุงูุฅููุชุฑูููุฉุ ุชุทุจููุงุช ุงููุงุชู ุงููุญูููุ ูุงูุญููู ุงูุชูููุฉ ุงููุชูุฏูุฉ ููุดุฑูุงุช.',
        isActive: true
      },
      {
        question: 'ููู ูููููู ุงูุชูุงุตู ูุนููุ',
        answer: 'ููููู ุงูุชูุงุตู ูุนูุง ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: info@company.com ุฃู ุงููุงุชู: +966123456789',
        isActive: true
      },
      {
        question: 'ูุง ูู ุฃููุงุช ุงูุนููุ',
        answer: 'ูุนูู ูู ุงูุฃุญุฏ ุฅูู ุงูุฎููุณ ูู ุงูุณุงุนุฉ 9 ุตุจุงุญุงู ุญุชู 6 ูุณุงุกู ุจุชูููุช ุงูุฑูุงุถ.',
        isActive: true
      },
      {
        question: 'ูู ุชูุฏููู ุฎุฏูุงุช ุงูุตูุงูุฉุ',
        answer: 'ูุนูุ ููุฏู ุฎุฏูุงุช ุงูุตูุงูุฉ ูุงูุฏุนู ุงูุชููู ูุฌููุน ูุดุงุฑูุนูุง ูุน ุถูุงู ููุฏุฉ ุณูุฉ ูุงููุฉ.',
        isActive: true
      }
    ]
    
    for (const qa of testQAs) {
      await prisma.qA.create({
        data: {
          ...qa,
          botId: testBot.id
        }
      })
    }
    
    console.log('โ ุชู ุฅุถุงูุฉ', testQAs.length, 'ุฃุณุฆูุฉ ูุฃุฌูุจุฉ')
    
    // ุฅุถุงูุฉ ูุตุงุฏุฑ ูุนุฑูุฉ ููุจูุช ุงูุชุฌุฑูุจู
    const knowledgeSources = [
      {
        title: 'ูุนูููุงุช ุงูุดุฑูุฉ',
        content: `ุดุฑูุฉ ุงูุชูููุงุช ุงููุชูุฏูุฉ ูู ุดุฑูุฉ ุฑุงุฆุฏุฉ ูู ูุฌุงู ุชุทููุฑ ุงูุญููู ุงูุชูููุฉ.
        
ุฎุฏูุงุชูุง:
        - ุชุทููุฑ ุงูููุงูุน ุงูุฅููุชุฑูููุฉ
        - ุชุทุจููุงุช ุงููุงุชู ุงููุญููู
        - ุฃูุธูุฉ ุฅุฏุงุฑุฉ ุงููุญุชูู
        - ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ
        - ุงูุฐูุงุก ุงูุงุตุทูุงุนู
        
ุฑุคูุชูุง: ุฃู ูููู ุงูุดุฑูู ุงูุชููู ุงูุฃูู ููุดุฑูุงุช ูู ุงูููุทูุฉ.
        
ูููุชูุง: ุชูุฏูู ุญููู ุชูููุฉ ูุจุชูุฑุฉ ุชุณุงุนุฏ ุนููุงุกูุง ุนูู ุชุญููู ุฃูุฏุงููู.`,
        type: 'text',
        url: null
      },
      {
        title: 'ุณูุงุณุฉ ุงูุฎุตูุตูุฉ',
        content: `ูุญู ูุญุชุฑู ุฎุตูุตูุฉ ุนููุงุฆูุง ูููุชุฒู ุจุญูุงูุฉ ุจูุงูุงุชูู ุงูุดุฎุตูุฉ.
        
ูุง ูุฌูุนู:
        - ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ ููุชูุงุตู
        - ุจูุงูุงุช ุงุณุชุฎุฏุงู ุงููููุน
        - ูุนูููุงุช ุงููุดุงุฑูุน
        
ููู ูุณุชุฎุฏููุง:
        - ุชุญุณูู ุฎุฏูุงุชูุง
        - ุงูุชูุงุตู ูุน ุงูุนููุงุก
        - ุชุทููุฑ ุญููู ูุฎุตุตุฉ
        
ูุญู ูุง ูุดุงุฑู ุจูุงูุงุชู ูุน ุฃุทุฑุงู ุซุงูุซุฉ ุฏูู ููุงููุชู ุงูุตุฑูุญุฉ.`,
        type: 'text',
        url: null
      }
    ]
    
    for (const source of knowledgeSources) {
      await prisma.knowledgeSource.create({
        data: {
          ...source,
          botId: testBot.id
        }
      })
    }
    
    console.log('โ ุชู ุฅุถุงูุฉ', knowledgeSources.length, 'ูุตุงุฏุฑ ูุนุฑูุฉ')
    
    console.log('\n๐ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู ุงูุชุฌุฑูุจู ุจูุฌุงุญ!')
    console.log('๐ง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: test@example.com')
    console.log('๐ ูููุฉ ุงููุฑูุฑ: test123')
    console.log('๐ค ูุนุฑู ุงูุจูุช:', testBot.id)
    console.log('๐ ุฑุงุจุท ุงูุงุฎุชุจุงุฑ: http://localhost:3002/test/' + testBot.id)
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุชุฎุฏู ุงูุชุฌุฑูุจู:', error)
  } finally {
    await prisma.$disconnect()
  }
}

seedTestUser()